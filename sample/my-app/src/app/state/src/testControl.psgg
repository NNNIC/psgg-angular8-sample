;PSGG Editor Backup File
version=1.1
file=testControl.xlsx
guid=ef3a0ac9-5847-492e-bfba-9221801ebd87
;set read_from  excel or psgg
read_from=psgg
;set savemode with_excel or psgg_only
save_mode=psgg_only
;set check_excel_writable yes or no
check_excel_writable=no

------#======*<Guid(D13821FE-FA27-4B04-834C-CEC1E5670F48)>*======#------

sheet=state-chart
nameid_list=,n001,n002,n003,n004,n005,,n006,,n007,,n008,n009,n00a,n00b,,n00c,n00d,,n00e,n00f,,n010,n011,,n012,n013,n014,n015,,n016,n017,n018
stateid_list=,,,,s0001,s0002,,s0003
max_name_id=24
max_state_id=3
[id_name_dic]
n001=thumbnail
n002=state
n003=state-cmt
n004=state-ref
n005=nextstate
n006=embed
n007=members
n008=vars
n009=init
n00a=init-cmt
n00b=init-ref
n00c=update
n00d=update-cmt
n00e=wait
n00f=wait-cmt
n010=post_wait
n011=post_wait-cmt
n012=branch
n013=branch-cmt
n014=brcond
n015=nowait
n016=!dir
n017=!pos
n018=!uuid


[id_state_dic]
s0001=S_START
s0002=S_END
s0003=S_0001


[s0001]
n002=S_START
n005=S_0001
n017=50,100
n018=100001

[s0002]
n002=S_END
n017=523,99
n018=100002

[s0003]
n001=(bitmap)
n002=S_0001
n003=new state
n005=S_END
n009=alert("!!");
n016=@@@
/
(100,100)

@@@

n017=293,83
n018=100003



------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=config

###VARIOUS-CONTENTS-BEGIN###
; The setting was created automatically. 2019/11/04 23:16:31
; * pssgEditor version : 0.61.41640.84b9998d3ecb2076fe5ce5f3a9a5018d44637bf4
psggfile=@@@
testControl.psgg
@@@
xlsfile=@@@
testControl.xlsx
@@@
guid=@@@
ef3a0ac9-5847-492e-bfba-9221801ebd87
@@@
bitmap_width=5000
bitmap_height=2000
c_statec_cmt=1
c_thumbnail=1
c_contents=1
force_display_outpin=0
last_action=@@@
Initilized
@@@
target_pathdir=@@@
/
@@@
state_location_list=@@@

@@@
nodegroup_comment_list=@@@
[{"Key":"\/","Value":""}]
@@@
nodegroup_pos_list=@@@
[{"Key":"\/","Value":{"x":100,"y":100}}]
@@@
fillter_state_location_list=@@@
[{"Key":"\/","Value":[{"Key":"S_START","Value":{"x":50,"y":100}},{"Key":"S_END","Value":{"x":523,"y":99}},{"Key":"S_0001","Value":{"x":293,"y":83}}]}]
@@@
linecolor_data=@@@
[{"color":{"knownColor":0,"name":null,"state":2,"value":4285493103},"pattern":"BACKTO_"}]
@@@
use_external_command=0
external_command=@@@

@@@
source_editor=@@@
"%USERPROFILE%\AppData\Local\Programs\Microsoft VS Code\Code.exe" --goto %1:%2
@@@
source_editor_vs2015_support=0
label_show=0
label_text=@@@
test
@@@
option_delete_thisstring=1
option_delete_br_string=1
option_delete_bracket_string=1
option_delete_s_state_string=1
option_copy_output_to_clipboard=0
option_convert_with_confirm=0
option_ignore_case_of_state=0
option_editbranch_automode=1
option_omit_basestate_string=0
option_hide_basestate_contents=1
option_hide_branchcmt_onbranchbox=0
font_name=@@@
MS UI Gothic
@@@
font_size=11
comment_font_size=0
contents_font_size=0
state_width=140
state_height=20
comment_block_height=20
content_max_height=200
comment_block_fixed=0
line_space=-1
userbutton_title=@@@

@@@
userbutton_command=@@@

@@@
userbutton_callafterconvert=0
itemeditform_size_list=@@@

@@@

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-source

###VARIOUS-CONTENTS-BEGIN###

###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=template-statefunc

###VARIOUS-CONTENTS-BEGIN###
<<<?state/^C_/
eof>>>
<<<?state/^E_/
[[embed]]
eof>>>
/*
    [[state]]
    [[state-cmt]]
*/
[[members]]
[[state]](bFirst: boolean) {

    [[vars]]

    if (bFirst) {

        this.curstatename = '[[state]]';
        // this.curstatecmt  = '[[state-cmt]]';

        [[init]]
    }

    [[update]]

    <<<?wait
    if ([[wait]]) { return; }
    >>>

    [[post_wait]]

    [[branch]]

    <<<?nextstate
    if (!this.HasNextState()) {
        this.Goto(this.[[nextstate]]);
    }
    >>>

    <<<?nowait
    this.NoWait();
    >>>

}
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=setting.ini

###VARIOUS-CONTENTS-BEGIN###
[setting]

psgg=testControl.psgg
xls=testControl.xlsx
sub_src=
gen_src=testControl.ts

manager_src=
manager_dir=

template_src=
template_func=template-statefunc.txt

help=help.ini
helpweb=starterkit\angular\helpweb.html

[setupinfo]

starterkit=https://github.com/NNNIC/psgg-starter-kit.git GIT-COMMIT-HASH


lang=typescript
framework=angular

statemachine=testControl

prefix=__PREFIX__
xlsdir=C:\Users\gea01\Documents\psgg\samples\psgg-angular-sample\playground\m00\doc
gendir=C:\Users\gea01\Documents\psgg\samples\psgg-angular-sample\playground\m00\my-app\src\app\statesrc
genrdir=.
incrdir=.

code_output_start=[PSGG OUTPUT START]
code_output_end=[PSGG OUTPUT END]

[macro]
; This section has macro defines for converting.

; commentline format  {%0} will be replaced to a comment.
commentline=// {%0}

@branch=@@@
<<<?"{%0}"/^brifc{0,1}$/
if ([[brcond:{%N}]]) { this.SetNext( {%1} ); }
>>>
<<<?"{%0}"/^brelseifc{0,1}$/
else if ([[brcond:{%N}]]) { this.SetNext( {%1} ); }
>>>
<<<?"{%0}"/^brelse$/
else { this.SetNext( {%1} ); }
>>>
<<<?"{%0}"/^br_/
this.{%0}(this.{%1});
>>>

@@@

[jpn]
title=Angular typescript  スタートキット  2019/9/22

detail=@@@

Angular typescript用のステートマシンを作成します。

※サンプルプロジェクトを次のＵＲＬより入手可能。
https://github.com/NNNIC/psgg-angular-sample

# ドキュメント用フォルダ
   ステート図ファイルとエディタ起動用ショートカットを格納

      C:\Users\gea01\Documents\psgg\samples\psgg-angular-sample\playground\m00\doc

  以下のファイルを作成します。

      testControl.pssg     --- エディタで次のエクセルファイルを開く。
      testControl.xlsx     ---  ステート図格納用Excelファイル。エディタが編集。

# ソース用フォルダ
　エディタが生成ソースファイル、ユーザ実装ソースファイル、及び管理クラスファイルを格納

      C:\Users\gea01\Documents\psgg\samples\psgg-angular-sample\playground\m00\my-app\src\app\statesrc

　以下のファイルを作成します。

      testControl.ts       --- Excelファイルからの変換結果を挿入。

注意 : 既に同名のファイルがある場合は生成されません。
　　　 削除してから生成してください。

[2019/9/22]　マネージャクラスの廃止
ステートクラス内にステート管理関数を内包するように変更しました。
これによりデバッグ時のステート追跡が簡単になります。
複数のステートクラスを管理する場合は、インターフェースクラスを設定して利用下さい。

@@@

[en]
title=Angular typescript STARTER KIT 2019/9/22

detail=@@@
This dialog will create files for a state machine.

* You may get the sample project from the below url.
https://github.com/NNNIC/psgg-angular-sample

# Document Folder
      This folder will contain a state chart file and the shortcut of the editor.

      C:\Users\gea01\Documents\psgg\samples\psgg-angular-sample\playground\m00\doc

  File:

      testControl.pssg  --- The editor opens the below excel file.
      testControl.xlsx  --- Excel File. The editor edits this file

# Source Folder
       This folder will contain a source file generated by the editor, a user implemetation source file, and a manager source file.

      C:\Users\gea01\Documents\psgg\samples\psgg-angular-sample\playground\m00\my-app\src\app\statesrc

　File:

      testControl.ts       -- The editor will convert from the excel file into this file.

NOTE : If the same name files exists, the file will not be created.
       Please delete the same name files ahead of the creation.

[9/22/2019] Abolition of manager class
Changed to include state management functions in the state class.
This simplifies state tracking during debugging.
When managing multiple state classes, set an interface class.

@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=help

###VARIOUS-CONTENTS-BEGIN###
; -----
; 項目説明
; -----

[state]
jpn=@@@
ステート名を指定する。
英文字、数字、アンダーバーで構成される。
先頭は英文字およびアンダーバー。
@@@
en=@@@
Specify a state name.
The state name consits of alphabet, number and underbar except that the head characther should be alphabet or a underbar.
@@@

[thumbnail]
jpn=@@@
説明用のイメージを指定する。
@@@
en=@@@
Specify a image for explanation of this state.
@@@

[init]
jpn=@@@
初期化用処理を指定する。
@@@
en=@@@
Specify a initial process.
@@@

[update]
jpn=@@@
更新処理を指定する。
@@@
en=@@@
Specify a update process.
@@@

[wait]
jpn=@@@
待ち条件を指定する。
true時にループを解除する。
@@@
en=@@@
Specify a waiting condition.
Release the loop if the condition is true.
@@@

[post_wait]
jpn=@@@
'wait'後の処理を指定する。
@@@
en=@@@
Specify the post process after 'wait'.
@@@

[branch]
jpn=@@@
分岐処理を指定する。
１行に一つの分岐命令を書く。
GUIにより上書きされるため引数は適当に指定する。
例）
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@
en=@@@
Specify branch functions.
Each line has a branch function.
Specify a tentavie parameter for each branch function because GUI overwrites the parameter.
i.e)
br_YES(?);
br_NO(?);
br_UNKNOWN(?);
@@@

[nextstate]
jpn=@@@
次に実行するステートを指定する。
@@@
en=@@@
Specify the next state to be executed.
@@@

[nowait]
jpn=@@@
次のステートへ同期待ちをせず実行する時に 'nowait'等を指定する。
同期待ち時には何も指定しない。
@@@
en=@@@
Specify 'nowait' and so on if the next state will be execute without a sync wait.
Do not specify any word wheh the next state will be execute with a sync wait.
@@@


[!dir]
jpn=@@@
システムがステートのディレクトリ指定に使用。
@@@
en=@@@
System uses this for the directory path of the state.
@@@

[!uuid]
jpn=@@@
システムがステートのuuid指定に使用。
@@@
en=@@@
System uses this for the uuid of the state.
@@@
###VARIOUS-CONTENTS-END###


------#======*<Guid(70C5A739-223A-457D-8AEE-1A0E2050D5AE)>*======#------

sheet=itemsinfo

###VARIOUS-CONTENTS-BEGIN###

###VARIOUS-CONTENTS-END###



------#======*<Guid(4DC98CBA-6257-4E26-A454-A53F85BC234C)>*======#------


